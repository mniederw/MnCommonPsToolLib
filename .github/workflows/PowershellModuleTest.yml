name: PowershellModuleTest

on: 
  push: # Triggers the workflow on push or pull request events but only for the given branches
    branches:
      [ main ]
    paths-ignore:
      - '*.txt'
  pull_request:
    branches:
      [ trunk ]
    paths-ignore:
      - '*.txt'

  workflow_dispatch:  # Allows you to run this workflow manually from the Actions tab

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest  # 2021-12: Ubuntu-V20.04.3-LTS contains PowerShell-V7.2; alternatives: windows-latest (=WinServer2019), macos-latest(=macOS Catalina 10.15).
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it # 2021-12: to '/home/runner/work/MnCommonPsToolLib/MnCommonPsToolLib'
      - uses: actions/checkout@v2

      - name: Install PSScriptAnalyzer module from PSGallery
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -ErrorAction Stop
          Install-Module SqlServer

      - name: Run PSScriptAnalyzer on all ps files - Check ps and make improving suggestions
        shell: pwsh
        run: |
          Invoke-ScriptAnalyzer -Path . -Recurse -Outvariable issues -ExcludeRule PSAvoidUsingConvertToSecureStringWithPlainText, PSAvoidUsingUsernameAndPasswordParams, PSAvoidUsingPlainTextForPassword, PSAvoidUsingEmptyCatchBlock, PSAvoidUsingWriteHost, PSAvoidGlobalVars, PSUseDeclaredVarsMoreThanAssignments, PSAvoidUsingPositionalParameters;
          $nrOfErrors   = $issues.Where({$_.Severity -eq 'Error'  }).Count;
          $nrOfWarnings = $issues.Where({$_.Severity -eq 'Warning'}).Count;
          if( $nrOfErrors -gt 0){ Write-Error "There were total $nrOfErrors errors and $nrOfWarnings warnings." -ErrorAction Stop; }
          else                  { Write-Output "There were total $nrOfErrors errors and $nrOfWarnings warnings."; }

      - name: Test import of this powershell lib
        shell: pwsh
        run: Import-Module -NoClobber -Name "$GITHUB_WORKSPACE/MnCommonPsToolLib/MnCommonPsToolLib.psm1"

      - name: Run UnitTest
        shell: pwsh
        run: |
          $GITHUB_WORKSPACE/Examples/ExampleUseOfMnCommonPsToolLib03_NoWaitAtEnd.ps1;
          $GITHUB_WORKSPACE/Examples/ExampleUseOfMnCommonPsToolLib04_Test.ps1;
          $GITHUB_WORKSPACE7Examples/MnCommonPsToolLibUnitTest.ps1;

      - name: Message for future use
        run: echo Later add testings here
