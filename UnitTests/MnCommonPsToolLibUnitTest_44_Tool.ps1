#!/usr/bin/env pwsh

Import-Module -NoClobber -Name "MnCommonPsToolLib.psm1"; Set-StrictMode -Version Latest; trap [Exception] { StdErrHandleExc $_; break; }

function UnitTest_Tool(){
  OutProgress (ScriptGetCurrentFuncName);
  #
  if( "TEST_THIS_IS_NOT_NESSESSARY" -eq "" ){  ToolTailFile "./anyfile.log"; }
  #
  if( "TEST_THIS_IS_NOT_NESSESSARY" -eq "" ){  ToolAddLineToConfigFile "./myconfigfile.cfg" "MyVar=`"MyValue`"; # AUTOGENERATED-DO-NOT-CHANGE"; }
  #
  ToolGithubApiAssertValidRepoUrl "https://github.com/mniederw/MnCommonPsToolLib/";
  #
  [String] $srcFile = FileGetTempFile; FileWriteFromString $srcFile "hello world";
  [String] $srcDir = DirCreateTemp "MN7z"; FileWriteFromString "$srcDir/test.txt" "hello world";
  [String] $tar7zipFile1 = "$srcFile.7z";
  [String] $tar7zipFile2 = "$srcFile.7z";
  ToolCreate7zip $srcFile $tar7zipFile1; Assert ((FileGetSize $tar7zipFile1) -gt 0);
  ToolCreate7zip $srcDir  $tar7zipFile2; Assert ((FileGetSize $tar7zipFile2) -gt 0);
  FileDelete $tar7zipFile1; 
  FileDelete $tar7zipFile2;
  FileDelete $srcFile;
  DirDelete $tmpDir;
  #
  # ToolUnzip ( [String] $srcZipFile, [String] $tarDir ){ # tarDir is created if it not exists, no overwriting,.  Is currently tested in: ToolGithubApiDownloadLatestReleaseDir
  #
  try{
    ToolGithubApiListOrgRepos "TheAlgorithms"  | Where-Object{ -not $_.archived -and -not $_.private } |
      Select-Object Url, default_branch, fork, forks, language, CreatedAt, UpdatedAt, PermAdm, PermPush, PermPull, LicName, Description -First 3;
    [String] $tmpDir = ToolGithubApiDownloadLatestReleaseDir "https://github.com/mniederw/MnCommonPsToolLib/"; Assert ($tmpDir.Length -gt 5);
  }catch{ # Response status code does not indicate success: 403 (rate limit exceeded).
    if( -not $_.Exception.Message.Contains("403 (rate limit exceeded)") ){ throw; }
    OutWarning "Warning: Ignored: $_.Exception.Message";
  }
  #
  if( "TEST_THIS_IS_NOT_NESSESSARY" -eq "" ){ Assert (FileExists (ToolEvalVsCodeExec)); }
}
UnitTest_Tool;
